{% extends "layout.njk" %}
{% block css %}
<link href="https://unpkg.com/tabulator-tables@5.4.3/dist/css/tabulator.min.css" rel="stylesheet">

<style>
  /* Table background for dark theme */
.tabulator {
    background-color: #2c2c2c;
    color: #f5f5f5;
    border: 1px solid transparent;
}

/* Table header for dark theme */
.tabulator .tabulator-header {
    background-color: #0f111a ;
    background: #0f111a ;
    color: #f5f5f5;
    border-bottom: 1px solid #0f111a;
}

.tabulator .tabulator-header .tabulator-col {
  background-color: #0f111a ;
    background: #0f111a ;
}

/* Table rows for dark theme */
.tabulator .tabulator-row {
    background-color: #141824;
    color: #f5f5f5;
}

.tabulator .tabulator-row:nth-child(even) {
    background-color: #191e2d;
}

/* Row hover effect */
.tabulator .tabulator-row:hover {
    background-color: #1d2233;
}

/* Pagination buttons for dark theme */
.tabulator .tabulator-paginator button {
    background-color: #0f111a;
    color: #fff;
    border: none;
}

.tabulator .tabulator-footer .tabulator-page {
    background-color: #0f111a;
    color: #f5f5f5;
}

.tabulator .tabulator-paginator button:hover {
    background-color: #1d2233;
}

.tabulator .tabulator-footer {
    background-color: #0f111a;
    color: #f5f5f5;
    border-top: 1px solid #0f111a;
}

.toast-header {
    background-color: transparent;
    color: #f5f5f5;
}

</style>
{% endblock %}

{% block content %}

        <div class="mx-n4 px-4 mx-lg-n6 px-lg-6 bg-white pt-7 border-y border-300">
          <div data-list='{"valueNames":["product","customer","rating","review","time"],"page":6}'>
            <div class="row align-items-end justify-content-between pb-5 g-3">
              <div class="col-auto">
                <h3>User Warnings</h3>
                <p class="text-700 lh-sm mb-0">List of all discord warnings</p>
              </div>
            </div>
            <div class="search-box mb-3 mx-auto">
              <input class="form-control search-input form-control-sm" type="search" id="searchInput" placeholder="Search" aria-label="Search">
            </div>
            <div id="warningTable"></div>

            <!-- Modal for Editing -->
            <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editModalLabel">Edit Warning</h5>
        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="editForm">
          <div class="form-group">
            <label for="reason">Reason</label>
            <input type="hidden" name="id" id="warn_id" value="">
            <input type="hidden" name="_crsf" id="csrf" value="{{ csrfToken }}">
            <input type="text" class="form-control" id="reason" placeholder="Reason">
          </div>
          <div class="form-group">
            <label for="warnUserId">User ID</label>
            <input type="text" class="form-control" id="warnUserId" placeholder="Enter content" readonly>
          </div>
          <div class="form-group">
            <label for="warnUsername">Username</label>
            <input type="text" class="form-control" id="warnUsername" placeholder="Enter content" readonly>
          </div>
          <!-- Add other fields as needed -->
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="saveChanges">Save changes</button>
      </div>
    </div>
  </div>
</div>
       
            <!-- End of Modal for Editing -->
             <!-- Modal for Viewing Full Reason -->
<div class="modal fade" id="fullReasonModal" tabindex="-1" role="dialog" aria-labelledby="fullReasonModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="fullReasonModalLabel">Full Warning Reason</h5>
        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="fullReasonModalBody">
        <!-- Full reason will be displayed here -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
<!-- End of Modal for Viewing Full Reason -->
            
            
      </div>
  </div>

<footer class="footer position-absolute">
  <div class="row g-0 justify-content-between align-items-center h-100">
    <div class="col-12 col-sm-auto text-center">
      <p class="mb-0 mt-2 mt-sm-0 text-900">IsekaiExpress Bot made for F95Zone by Ryahn</p>
    </div>
    <div class="col-12 col-sm-auto text-center">
      <p class="mb-0 text-600">v1.13.0</p>
    </div>
  </div>
</footer>
 <!-- Toast -->
 <div class="position-fixed top-0 end-0 p-3" style="z-index: 11; top: 65px !important;">
  <div class="toast" id="myToast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="3000">
    <div class="toast-header">
      <strong class="me-auto">Message</strong>
      <small class="text-muted" id="timestamp"></small>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      This is the body of the toast.
    </div>
  </div>
</div>
<!-- End of Toast -->
{% endblock %}
{% block scripts %}
<script type="text/javascript" src="https://unpkg.com/tabulator-tables@5.4.3/dist/js/tabulator.min.js"></script>

<script>
		document.querySelector('.logout-link').addEventListener('click', function (e) {
    e.preventDefault();  // Prevent default link behavior
    document.getElementById('logout-form').submit();  // Submit the logout form
});
document.addEventListener("DOMContentLoaded", function() {
    var table = new Tabulator("#warningTable", {
        ajaxURL: "/warnings/list", // Load data via AJAX
        ajaxResponse: function(url, params, response) {
            return response.warnings; // Return the array from the response object
        },
        pagination: "local", // Enable pagination
        paginationSize: 10, // Set page size
        layout: "fitColumns", // Fit columns to width of table
        columns: [
    { title: "Warn ID", field: "warn_id" },
    { title: "Warned UID", field: "warn_user_id" },
    { title: "Warned User", field: "warn_user" },
    { title: "Warned By UID", field: "warn_by_id" },
    { title: "Warned By User", field: "warn_by_user" },
    {
        title: "Reason",
        field: "warn_reason",
        hozAlign: "center",
        formatter: function(cell, formatterParams) {
            return `<button class="btn btn-sm btn-info viewReasonButton" data-reason="${cell.getValue()}">View</button>`;
        },
        cellClick: function(e, cell) {
            if (e.target.classList.contains("viewReasonButton")) {
                var reason = cell.getValue();
                $('#fullReasonModalBody').text(reason); // Set the reason in the modal
                $('#fullReasonModal').modal('show'); // Show the modal
            }
        }
    },
    { title: "Created At", field: "created_at" },
    { title: "Updated At", field: "updated_at" },
    {
        title: "Action",
        field: "warn_id",
        hozAlign: "center",
        formatter: function(cell, formatterParams) {
            {% if allow %}
            return `
                <button class="btn btn-sm btn-primary editButton" data-id="${cell.getValue()}">Edit</button>
                <button class="btn btn-sm btn-danger deleteButton" data-id="${cell.getValue()}">Delete</button>
            `;
            {% else %}
            return '';
            {% endif %}
        },
        cellClick: function(e, cell) {
            var id = cell.getValue();
            var rowData = cell.getRow().getData();

            if (e.target.classList.contains("editButton")) {
                $('#reason').val(rowData.warn_reason);
                $('#warnUserId').val(rowData.warn_user_id);
                $('#warnUsername').val(rowData.warn_user);
                $('#editModalLabel').text(`Edit Warning For: ${rowData.warn_user}`);
                $('#warn_id').val(id);
                $('#editModal').modal('show');
            }

            if (e.target.classList.contains("deleteButton")) {
                if (confirm("Are you sure you want to delete this command?")) {
                    $.ajax({
                        url: `/warnings/delete/${rowData.warn_id}`,
                        method: 'POST',
                        data: {
                            warn_id: rowData.warn_id,
                            _csrf: '{{ csrfToken }}'
                        },
                        success: function(response) {
                            table.replaceData(); // Refresh the table after deletion
                        }
                    });
                }
            }
        }
    }
]

    });

    // Save changes to the command
    document.getElementById("saveChanges").addEventListener("click", function() {
        var reason = $('#reason').val();
        var id = $('#warn_id').val();
        var csrf = $('#csrf').val();

        $.ajax({
            url: '/warnings/edit/' + id,
            method: 'POST',
            data: {
                reason: reason,
                _csrf: csrf
            },
            success: function(response) {
                $('#editModal').modal('hide');
                var toastEl = document.getElementById('myToast');
                var toastBody = toastEl.querySelector('.toast-body');
                toastEl.classList.remove('text-bg-success', 'text-bg-danger');
                toastEl.classList.add('text-bg-success');
                toastBody.textContent = response.message;
                var toast = new bootstrap.Toast(toastEl);
                toast.show();
                table.replaceData(); // Refresh the table after updating
            }
        });
    });

    // Search functionality
    document.getElementById("searchInput").addEventListener("input", function(event) {
    var searchValue = event.target.value.toLowerCase();

    table.setFilter(function(data, filterParams){
        // Safely check if each field is a string, otherwise, return false
        return (typeof data.name === 'string' && data.name.toLowerCase().includes(searchValue)) || 
               (typeof data.content === 'string' && data.content.toLowerCase().includes(searchValue)) ||
               (typeof data.usage === 'string' && data.usage.toLowerCase().includes(searchValue)) ||
               (typeof data.created_by_username === 'string' && data.created_by_username.toLowerCase().includes(searchValue)) ||
               (typeof data.updated_by_username === 'string' && data.updated_by_username.toLowerCase().includes(searchValue)) ||
               (typeof data.created_at === 'string' && data.created_at.toLowerCase().includes(searchValue)) ||
               (typeof data.updated_at === 'string' && data.updated_at.toLowerCase().includes(searchValue));
    });
});

});


	</script>
{% endblock %}