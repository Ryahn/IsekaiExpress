version: "3.9"
name: isekaiexpress

volumes:
  mysql_data:

networks:
  appnet:

services:
  mysql:
    image: mysql:8.0
    container_name: iex_mysql
    command: >
      mysqld --default-authentication-plugin=mysql_native_password
             --character-set-server=utf8mb4
             --collation-server=utf8mb4_unicode_ci
    cap_add:
      - SYS_NICE
    environment:
      TZ: "America/Chicago"
      MYSQL_DATABASE: isekai
      MYSQL_USER: isekai
      MYSQL_PASSWORD: isekai
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "${MYSQL_HOST_PORT:-3307}:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -prootpass || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [appnet]
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: iex_redis
    environment:
      TZ: "America/Chicago"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [appnet]
    restart: unless-stopped

  # ---- One-shot migrator (runs knex, then exits 0) ----
  migrate:
    # Reuse your app image so node_modules & knex CLI are available
    build:
      context: .
      dockerfile: ./docker/Dockerfile.bot
      target: ${BUILD_TARGET:-dev}   # dev|prod
    container_name: iex_migrate
    depends_on:
      mysql: { condition: service_healthy }
    networks: [appnet]
    restart: "no"
    # In dev, bind-mount the repo so migrations in your tree are used live
    volumes:
      - ./:/app
      - /app/node_modules
    entrypoint: ["sh","-lc","npx knex --knexfile /app/knexfile.js migrate:latest && echo 'migrations ok'"]

  bot:
    container_name: iex_bot
    build:
      context: .
      dockerfile: ./docker/Dockerfile.bot
      target: ${BUILD_TARGET:-dev}
    init: true
    user: "node"
    environment:
      TZ: "America/Chicago"
      NODE_ENV: ${NODE_ENV:-development}
      CHOKIDAR_USEPOLLING: "true"
    depends_on:
      mysql:   { condition: service_healthy }
      redis:   { condition: service_healthy }
      migrate: { condition: service_completed_successfully }
    networks: [appnet]
    restart: unless-stopped
    profiles: ["dev", "prod"]
    stop_grace_period: 15s
    stop_signal: SIGTERM
    volumes:
      - ./:/app
      - /app/node_modules
    command: ["npx","nodemon","-L",
              "--config","/app/nodemon.json",
              "--watch","/app/src/bot",
              "--exec","npm run start:bot"]

  web:
    container_name: iex_web
    build:
      context: .
      dockerfile: ./docker/Dockerfile.web
      target: ${BUILD_TARGET:-dev}
    init: true
    user: "node"
    depends_on:
      mysql:   { condition: service_healthy }
      redis:   { condition: service_healthy }
      migrate: { condition: service_completed_successfully }
    ports:
      - "${WEB_PORT:-3000}:3000"
    networks: [appnet]
    restart: unless-stopped
    profiles: ["dev", "prod"]
    stop_grace_period: 15s
    stop_signal: SIGTERM
    volumes:
      - ./:/app
      - /app/node_modules
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      CHOKIDAR_USEPOLLING: "true"
      TZ: "America/Chicago"
    command: ["npx","nodemon","-L",
              "--config","/app/nodemon.json",
              "--watch","/app/src/web",
              "--exec","npm run start:web"]
