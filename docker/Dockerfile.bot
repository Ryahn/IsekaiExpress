# syntax=docker/dockerfile:1.7
ARG NODE_VERSION=18
FROM node:${NODE_VERSION} AS base
WORKDIR /app
ENV CI=true

# --- deps at root ---
FROM base AS deps
WORKDIR /app
COPY package*.json ./
RUN npm ci

# --- dev image ---
FROM node:${NODE_VERSION} AS dev
WORKDIR /app
ENV NODE_ENV=development CHOKIDAR_USEPOLLING=true
COPY --from=deps /app/node_modules /app/node_modules
# fallback copies (dev actually bind-mounts the whole repo)
COPY . .
# no EXPOSE needed; bot doesnâ€™t serve http by default
CMD ["npx","nodemon","-L","--watch","/app/src/bot","--exec","npm","--prefix","/app","run","start:bot"]
# ^ assumes you have a root script like "start:bot". If not, keep your compose command.

# --- prod image ---
FROM node:${NODE_VERSION} AS prod
WORKDIR /app
ENV NODE_ENV=production
COPY --from=deps /app/node_modules /app/node_modules
COPY . .
# If you have a build step for bot assets, do it here
# RUN npm run build:bot
CMD ["npm","run","start:bot"]
